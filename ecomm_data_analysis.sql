use ecomm_data;
create table ecomm_data_table (
RowID int, OrderID text, OrderDate date, ShipDate date,
ShipMode text, CustomerID text,CustomerName text,
Segment text,City text,State text,Country text,PostalCode text,
Market text,Region text,ProductID text,Category text,
SubCategory text,ProductName text,Sales double,
Quantity int,Discount double,Profit double,
ShippingCost double,OrderPriority text);

LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/ECOMM DATA.csv'
INTO TABLE ecomm_data_table
FIELDS TERMINATED BY ',' ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(RowID, OrderID, @OrderDate, @ShipDate, ShipMode, CustomerID, CustomerName, Segment, City, State, Country, PostalCode, Market, Region, ProductID, Category, SubCategory, ProductName, Sales, Quantity, Discount, Profit, ShippingCost, OrderPriority)
SET OrderDate = STR_TO_DATE(@OrderDate, '%d-%m-%Y'),
    ShipDate = STR_TO_DATE(@ShipDate, '%d-%m-%Y');


/* 1-> Top 10 best-selling items */
SELECT 
    SubCategory, ROUND(SUM(sales), 2) AS total_sales
FROM
    ecomm_data.ecomm_data_table
GROUP BY SubCategory
ORDER BY total_sales DESC
LIMIT 10;

/* 2-> Total sales for every year */
SELECT 
    YEAR(OrderDate) AS Year, ROUND(SUM(sales), 2) AS total_sales
FROM
    ecomm_data.ecomm_data_table
GROUP BY Year
ORDER BY Year;

/* 3-> The total revenue generated by the company */
SELECT 
    ROUND(SUM(sales * quantity) 
            ) AS total_revenue
FROM
    ecomm_data.ecomm_data_table;
    
/* 4-> The total Profit generated by the company  */
SELECT 
    ROUND(SUM(CASE
                WHEN ecomm_data_table.Profit > 0 THEN ecomm_data_table.Profit
                ELSE 0
            END),
            2) AS total_profit
FROM
    ecomm_data.ecomm_data_table;

/* 5-> category with the most returned items */
SELECT 
    ecomm_data_table.SubCategory, returns.Returned
FROM
    ecomm_data.ecomm_data_table
        JOIN
    ecomm_data.returns ON ecomm_data_table.OrderID = returns.OrderID
GROUP BY ecomm_data_table.SubCategory , returns.Returned;


/* 6-> Country with the most orders */
SELECT 
    Country, COUNT(OrderID) AS Total_orders
FROM
    ecomm_data.ecomm_data_table
GROUP BY Country
ORDER BY Total_orders DESC
LIMIT 10;

/* 7-> Top 10 most popular categories.*/
SELECT 
    SubCategory, COUNT(OrderID) AS num_of_orders
FROM
    ecomm_data.ecomm_data_table
GROUP BY SubCategory
ORDER BY num_of_orders DESC
LIMIT 10;

/* 8-> Category-Wise Profit.*/
SELECT 
    Category,
    ROUND(SUM(CASE
                WHEN ecomm_data_table.Profit > 0 THEN ecomm_data_table.Profit
                ELSE 0
            END),
            2) AS total_profit
FROM
    ecomm_data.ecomm_data_table
GROUP BY Category
ORDER BY total_profit DESC;

/* 9-> Top 10 items with the Highest shipping cost */
SELECT 
    SubCategory, ShippingCost
FROM
    ecomm_data.ecomm_data_table
GROUP BY SubCategory , ShippingCost
ORDER BY ShippingCost DESC
LIMIT 10;

/* 10-> .The top 10 countries from where the highest profit generated. */
SELECT 
    Country,
    ROUND(SUM(CASE
                WHEN ecomm_data_table.Profit > 0 THEN ecomm_data_table.Profit
                ELSE 0
            END),
            2) AS total_profit
FROM
    ecomm_data.ecomm_data_table
GROUP BY Country
ORDER BY Total_profit DESC
LIMIT 10;

/* 11-> average time between order placement and shipment */
SELECT 
    ROUND(AVG(DATEDIFF(ShipDate, OrderDate))) AS Processing_time
FROM
    ecomm_data.ecomm_data_table;

/* 12->  the average order value for new vs. returning customers */
with first_order_customer as (
  select *,
         row_number() over (partition by CustomerID order by OrderDate) as first_order
  from ecomm_data.ecomm_data_table
)
select
  case when first_order = 1 then 'New Customer' else 'Returning Customer' end as customer_type,
  round(avg(Sales),2) as average_order_value
from first_order_customer
group by customer_type;

/* 13-> products with low sales performance that might need to be discontinued  */
SELECT 
    SubCategory, Sales
FROM
    ecomm_data.ecomm_data_table
WHERE
    Sales < (SELECT 
            ROUND(ABS(AVG(Sales) - 2 * STD(Sales)), 2)
        FROM
            ecomm_data.ecomm_data_table);

/* 14 -> Product subcategory- wise highest profit margin. */
SELECT 
    SubCategory,
    ROUND(SUM(CASE
                WHEN ecomm_data_table.Profit > 0 THEN ecomm_data_table.Profit
                ELSE 0
            END),
            2) AS total_profit,
    ROUND(SUM(ecomm_data_table.Sales), 2) AS total_sales,
    CONCAT(ROUND(SUM(CASE
                        WHEN ecomm_data_table.Profit > 0 THEN ecomm_data_table.Profit
                        ELSE 0
                    END) / SUM(ecomm_data_table.Sales) * 100,
                    2), '%') AS profit_margin 
FROM
    ecomm_data_table
GROUP BY SubCategory
ORDER BY profit_margin DESC;

/* 15-> The overall sales trend over time */
SELECT 
    YEAR(OrderDate) AS OrderYear,
    MONTH(OrderDate) AS OrderMonth,
    ROUND(SUM(Sales), 2) AS TotalSales
FROM
    ecomm_data_table
GROUP BY YEAR(OrderDate) , MONTH(OrderDate)
ORDER BY OrderYear , OrderMonth;




