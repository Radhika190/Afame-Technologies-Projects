use ecomm_data;
create table ecomm_data_table (
RowID int, OrderID text, OrderDate date, ShipDate date,
ShipMode text, CustomerID text,CustomerName text,
Segment text,City text,State text,Country text,PostalCode text,
Market text,Region text,ProductID text,Category text,
SubCategory text,ProductName text,Sales double,
Quantity int,Discount double,Profit double,
ShippingCost double,OrderPriority text);

LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/ECOMM DATA.csv'
INTO TABLE ecomm_data_table
FIELDS TERMINATED BY ',' ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS
(RowID, OrderID, @OrderDate, @ShipDate, ShipMode, CustomerID, CustomerName, Segment, City, State, Country, PostalCode, Market, Region, ProductID, Category, SubCategory, ProductName, Sales, Quantity, Discount, Profit, ShippingCost, OrderPriority)
SET OrderDate = STR_TO_DATE(@OrderDate, '%d-%m-%Y'),
    ShipDate = STR_TO_DATE(@ShipDate, '%d-%m-%Y');


/* 1-> Top 10 best-selling items */
select SubCategory,round(sum(sales),2) as total_sales
from ecomm_data.ecomm_data_table
group by SubCategory
order by total_sales desc 
limit 10;

/* 2-> Total sales for every year */
select year(OrderDate) as Year,round(sum(sales),2) as total_sales
from ecomm_data.ecomm_data_table
group by Year
order by Year;

/* 3-> The total revenue generated by the company */
select round(SUM(sales - (sales * (Discount / 100)) + ShippingCost),2) as total_revenue
from ecomm_data.ecomm_data_table;

/* 4-> category with the most returned items */
select ecomm_data_table.SubCategory, returns.Returned
from ecomm_data.ecomm_data_table  
join ecomm_data.returns  
on ecomm_data_table.OrderID = returns.OrderID  
group by ecomm_data_table.SubCategory, returns.Returned ;


/* 5-> Country with the most orders */
select Country, count(OrderID) as Total_orders
from ecomm_data.ecomm_data_table
group by Country
order by Total_orders desc
limit 10;

/* 6-> Top 10 most popular categories.*/
select SubCategory, count(OrderID) as num_of_orders
from ecomm_data.ecomm_data_table
group by SubCategory
order by num_of_orders desc
limit 10 ;

/* 7-> Category-Wise Profit.*/
select Category, 
round(SUM(case when ecomm_data_table.Profit > 0 then ecomm_data_table.Profit else 0 end),2) as total_profit
from ecomm_data.ecomm_data_table
group by Category
order by total_profit desc;

/* 8-> Top 10 items with the Highest shipping cost */
select SubCategory, ShippingCost
from ecomm_data.ecomm_data_table
group by SubCategory, ShippingCost
order by ShippingCost desc
limit 10;

/* 9-> .The top 10 countries from where the highest profit generated. */
select Country, 
round(SUM(case when ecomm_data_table.Profit > 0 then ecomm_data_table.Profit else 0 end),2) as total_profit
from ecomm_data.ecomm_data_table
group by Country
order by Total_profit desc
limit 10;

/* 10-> average time between order placement and shipment */
select round(avg(datediff(ShipDate,OrderDate))) as Processing_time
from ecomm_data.ecomm_data_table;

/* 11->  the average order value for new vs. returning customers */
with first_order_customer as (
  select *,
         row_number() over (partition by CustomerID order by OrderDate) as first_order
  from ecomm_data.ecomm_data_table
)
select
  case when first_order = 1 then 'New Customer' else 'Returning Customer' end as customer_type,
  round(avg(Sales),2) as average_order_value
from first_order_customer
group by customer_type;

/* 12-> products with low sales performance that might need to be discontinued  */
select SubCategory , Sales
from ecomm_data.ecomm_data_table
where Sales < (select round(abs(avg(Sales) - 2 * std(Sales)),2) from ecomm_data.ecomm_data_table);

/* 13 -> Product subcategory- wise highest profit margin. */
select 
    SubCategory,
    round(SUM(case when ecomm_data_table.Profit > 0 then ecomm_data_table.Profit else 0 end),2) as total_profit,
    round(SUM(ecomm_data_table.Sales), 2) as total_sales,
    round(SUM(case when ecomm_data_table.Profit > 0 then ecomm_data_table.Profit else 0 end) / SUM(ecomm_data_table.Sales) * 100, 2) AS profit_margin
from 
    ecomm_data_table
group by
    SubCategory
order by
    profit_margin desc;
    
/* 14-> The overall sales trend over time */
select year(OrderDate) as OrderYear, month(OrderDate) as OrderMonth, round(sum(Sales),2) as TotalSales
from ecomm_data_table
group by year(OrderDate), month(OrderDate)
order by OrderYear, OrderMonth;

